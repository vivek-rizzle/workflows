name: Serverless Deployment
on:
  workflow_call:
    inputs:
      function_name:
        required: true
        type: string
      branch:
        required: true
        type: string
      secret:
        required: false
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_ACCOUNT_ID:
        required: true
      IMAGE:
        required: true

jobs:
  deploy-serverless:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Replace Service Name
        run: |
            sed -i 's/service: BACK/service: ${{ inputs.branch }}/g' serverless.yml

      - name: Install Serverless Framework
        run: npm install -g serverless

      - name: Configure AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com
          serverless config credentials --provider aws --key $AWS_ACCESS_KEY_ID --secret $AWS_SECRET_ACCESS_KEY

      - name: Deploy using Serverless Framework
        id: lambda
        env:
          ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          BRANCH_NAME: ${{ inputs.branch }}
          IMAGE: ${{ secrets.IMAGE }}
        run: |
          serverless deploy --param="account_id=$ACCOUNT_ID" --param="branch_name=$BRANCH_NAME" --param="image=$IMAGE"

      - name: Set ENV variables
        if: ${{ inputs.secret != '' }}
        run: |
          secret_output=$(aws secretsmanager get-secret-value --secret-id ${{ inputs.secret }} --region us-east-1 --query SecretString --output text)
          fmt=$(echo "$secret_output" | jq -r 'to_entries | map("\(.key)=\(.value)") | "{" + join(",") + "}"')
          aws lambda update-function-configuration --function-name ${{ inputs.branch }}-${{ inputs.function_name }} --region us-east-1 --environment "Variables=$fmt"

      - name: Create comment
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Lambda URL: https://console.aws.amazon.com/lambda/home?region=us-east-1#/functions/${{ inputs.branch }}-${{ inputs.function_name }}'
            })
